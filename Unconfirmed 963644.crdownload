# -*- coding: utf-8 -*-
"""GPACalculatorPythonOOP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13FY1gQoSVn2OAgfx5g7yi0wQ_iKGdapa
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

import numpy as np

from google.colab import files
uploaded = files.upload()

#https://towardsdatascience.com/3-ways-to-load-csv-files-into-colab-7c14fcbdcb92#:~:text=Click%20on%20%E2%80%9CChoose%20Files%E2%80%9D%20then,name%20of%20the%20uploaded%20file).

import io
df = pd.read_csv(io.BytesIO(uploaded['CTASample.csv.csv']))

#import csv and print
import csv

with open('CTASample.csv.csv','r') as file_csv:
    read = list(csv.reader(file_csv))
    for i, row in enumerate(read):
        if i > 0:
            row[1] = float(row[1])
        print(row)

#https://www.geeksforgeeks.org/how-to-convert-strings-to-floats-in-pandas-dataframe/
#https://datatofish.com/convert-string-to-float-dataframe/
#https://stackoverflow.com/questions/36716503/how-to-create-a-grading-system-in-python

# importing pandas library
import pandas as pd
import numpy as np
  
# dictionary
Data = { 'Student Name':['James Jameson','Peter Parker', 'Mary Janeson','Felicia Hardiman', 'Lori Grimes','Anthony Stones'],
         'Intro to Programming': [80, 50, 
                 40, 70, 50, 90],
        'Databases': [70, 55, 
                           40, 67, 30, 90],
        'Computer Architecture': [55, 50, 
                 40, 78, 35, 65],
        'Ethics in Computer Science': [12, 50, 
                 23, 70, 30, 78],
        'Advanced Programming': [50, 50, 
                 40, 56, 30, 90],
        'Puzzles and Problem Solving': [80, 50, 
                 45, 80, 30, 80]}

# create a dataframe
df = pd.DataFrame(Data)
  
# convert each value 
# of column to a string
df['Intro to Programming'] = df['Intro to Programming'].astype(float)






  
# show the dataframe
print(df)


  
# show the datatypes
print (df.dtypes)

#creates a student class
 class Student:
    def __init__(self):
        self.__name=""
        self.__score=[]
        self.__total=0
        self.__per=0
        self.__grade=""
        self.__result=""
        self.__gpa=""
        self.__min=0
        self.__max=0
        self.__std=0
        self.__median=0
        self.__uppergpa=4.2

#show total scores in student class
    def showTotal(self):
        for x in self.__score:
            self.__total+=x

#show min scores in student class

    def showMinimum(self):
          min=self.__score[0]
          for x in range(0,len(self.__score)):
            if(self.__score[x]<min):
              min=self.__score[x]
              self.__min=min

#show max scores in student class

    def showMaximum(self):
          max=self.__score[0]
          for x in range(0,len(self.__score)):
            if(self.__score[x]<max):
              max=self.__score[x]
              self.__max=max

#show standard deviation scores in student class

    def showSTD(self):
          x=np.array(self.__score) 
          y=np.std(x) 
          self.__std=y

#show median scores in student class
   
    def showMedian(self):
          x=np.array(self.__score) 
          y=np.median(x) 
          self.__median=y 

#show difference from highest GPA scores in student class

    def showDiffGPA(self):
        num1 = float
        num2 = float 
        x=num1(self.__uppergpa)
        y=num2(self.__gpa)
        if x > y:
           d = x - y
           self.__gpa=d


#show percentage scores in student class
			
    def showPercentage(self):
        self.__per=self.__total/6

#show letter grade in student class
		
    def showGrade(self):
        if self.__per>=97:
            self.__grade="A+"
        elif self.__per>=93:
            self.__grade="A"
        elif self.__per>=90:
            self.__grade="A-"
        elif self.__per>=87:
            self.__grade="B+"
        elif self.__per>=83:
            self.__grade="B"
        elif self.__per>=80:
            self.__grade="B-"
        elif self.__per>=77:
            self.__grade="C+"    
        elif self.__per>=73:
            self.__grade="C"
        elif self.__per>=70:
            self.__grade="C-"
        elif self.__per>=67:
            self.__grade="D+"    
        elif self.__per>=65:
            self.__grade="D"
        else:
            self.__grade="F"

#show GPA scores in student class

    def showGPA(self):
        if self.__per>=97:
            self.__gpa="4.2"
        elif self.__per>=93:
            self.__gpa="4.0"
        elif self.__per>=90:
            self.__gpa="3.8"
        elif self.__per>=87:
            self.__gpa="3.3"
        elif self.__per>=83:
            self.__gpa="3.0"
        if self.__per>=80:
            self.__gpa="2.7"
        elif self.__per>=77:
            self.__gpa="2.3"
        elif self.__per>=73:
            self.__gpa="2.0"
        elif self.__per>=70:
            self.__gpa="1.7"
        elif self.__per>=67:
            self.__gpa="1.3"  
        elif self.__per>=65:
            self.__gpa="1.0"      
        else:
            self.__gpa="0.0"

#show GPA scores in student class

    
    def showDiffGPA(self):
        num1 = float
        num2 = float 
        x=num1(self.__uppergpa)
        y=num2(self.__gpa)
        if x > y:
           num2 = x - y
           self.__gpa = num2      

#show scores in student class


    def getScore(self):
        self.gradesScore()
        return self.score        
			
    def showResult(self):
        count=0
        for x in self.__score:
            if x>=50:
                count+=1
        if count==6:
            self.__result="P"
        elif count>=3:
            self.__result="C"
        else:
            self.__result="F"



    

    def getScore(self):
        self.gradesScore()
        return self.score        
			
    def showStudent(self):
        self.showTotal()
        self.showPercentage()
        self.showGrade()
        self.showResult()
        self.showGPA()
        self.showMinimum()
        self.showMaximum()
        self.showSTD()
        self.showMedian()
        self.showDiffGPA()
        print(self.__name,"\t\t",self.__total,"\t\t",self.__per,"\t\t",self.__grade,"\t\t",self.__result, "\t\t",self.__gpa,self.__min,"\t\t",self.__max,"\t\t",self.__std,"\t\t", self.__median,"\t\t", self.__uppergpa,"\t\t")
   
#show student object in student class

def main():
     #Student object
     s=Student()
     s.showStudent()

if __name__=="__main__":
    main()

import csv
with open('CTASample.csv', newline='') as csvfile:
 data = csv.reader(csvfile, delimiter=' ', quotechar='|')
 for row in data:
   print(', '.join(row))

df

import pandas
df = pandas.read_csv('CTASample.csv')
print(df)

import pandas
df = pandas.read_csv('CTASample.csv', index_col='Name')
print(df)

